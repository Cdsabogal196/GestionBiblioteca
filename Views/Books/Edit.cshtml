@model GestionDeBiblioteca.Models.DTO.UpdateBookDTO

@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar Libro</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <h4>Detalles del Libro</h4>
        <hr />
        @Html.HiddenFor(model => model.BookId)

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.Title, "Título", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.Year, "Año de Publicación", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.Genre, "Género", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.NumPage, "Número de Páginas", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.NumPage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumPage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.AuthorName, "Nombre del Autor", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.AuthorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AuthorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            <div class="col-sm-10 offset-sm-2">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="mt-3">
    @Html.ActionLink("Volver a la lista", "Index", new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
