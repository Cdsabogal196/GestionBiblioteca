@model GestionDeBiblioteca.Models.DTO.CreateBookDTO

@{
    ViewBag.Title = "Ingresa Nuevo Libro";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">Crear nuevo libro</h2>
        </div>

        <div class="card-body">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger mb-0" })
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Cerrar"></button>
                </div>
            }

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Title, "Titulo" ,htmlAttributes: new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese el Titulo Del Libro" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger small" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.AuthorName, "Nombre del autor", htmlAttributes: new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.AuthorName, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese el nombre del Autor" } })
                            @Html.ValidationMessageFor(model => model.AuthorName, "", new { @class = "text-danger small" })
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Year, "Año de publicacion", htmlAttributes: new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", placeholder = "Año De Publicacion" } })
                            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger small" })
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.NumPage, "Numero de paginas", htmlAttributes: new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.NumPage, new { htmlAttributes = new { @class = "form-control", placeholder = "Numero De Paginas" } })
                            @Html.ValidationMessageFor(model => model.NumPage, "", new { @class = "text-danger small" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Genre,"Genero", htmlAttributes: new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese Genero" } })
                            @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger small" })
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="d-flex justify-content-between mt-4">
                            <button type="submit" class="btn btn-success px-4">
                                <i class="fas fa-save me-2"></i>Create Book
                            </button>
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-secondary" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
}